// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

// Event wrapper
// @author Harry Roberts
// @param{Bool} $self [false] - Whether or not to include current selector
// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false){
  @if $self{
    &,
    &:hover,
    &:active,
    &:focus{
      @content;
    }
  } @else{
    &:hover,
    &:active,
    &:focus{
      @content;
    }
  }
}

// Make a context based selector a little more friendly
// @author Hugo Giraudel
// @param{String} $context
@mixin when-inside($context){
  #{$context} &{
    @content;
  }
}

// Mixing for gradient background
// We provide start color and end color
@mixin linear-gradient-vertical($initial, $final){
  background: $initial; /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */
  background: -webkit-gradient(linear,  left top, left bottom,  from($initial),to($final));
  background: linear-gradient(to bottom,  $initial 0%,$final 100%); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$initial}', endColorstr='#{$final}',GradientType=0 ); /* IE6-9 */
}

// Mixing for gradient background
// We provide start color and end color
@mixin linear-gradient-horizontal($initial, $final){
  background: $initial; /* FF3.6+ */ /* Chrome,Safari4+ */ /* Chrome10+,Safari5.1+ */ /* Opera 11.10+ */ /* IE10+ */
  background: -webkit-gradient(linear, left top, right top, from($initial), to($final));
  background: linear-gradient(left, $initial, $final); /* W3C */
  filter: progid:DXImageTransform.Microsoft.gradient(start-colourStr='#{$initial}', end-colourStr='#{$final}', gradientType='1'); /* IE6-9 */
}

// Flex setup for navigation elements
// Apply this on sm view (768px and up)
@mixin flex-navigation{
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-left: 0;
  -webkit-box-orient: horizontal;
  -webkit-box-direction: normal;
  -ms-flex-flow: row nowrap;
  flex-flow: row nowrap;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: stretch;
  -ms-flex-align: stretch;
  align-items: stretch;
}

@mixin flex-child{
  display: block;
  -webkit-box-flex: 1;
  -ms-flex: 1 0 auto;
  flex: 1 0 auto;
}

// Mixin for Contrast
@mixin contrast ($percent){
  filter: contrast($percent);
  -webkit-filter: contrast($percent);
  -moz-filter: contrast($percent);
  -o-filter: contrast($percent);
  -ms-filter: contrast($percent);
}

// Mixin for Saturation
@mixin saturation ($percent){
  filter: saturate($percent);
  -webkit-filter: saturate($percent);
  -moz-filter: saturate($percent);
  -o-filter: saturate($percent);
  -ms-filter: saturate($percent);
}

// Mixin for Brightness
@mixin brightness ($percent){
  filter: brightness($percent);
  -webkit-filter: brightness($percent);
  -moz-filter: brightness($percent);
  -o-filter: brightness($percent);
  -ms-filter: brightness($percent);
}

// Mixin for Placeholder
@mixin placeholder{
  &::-webkit-input-placeholder{@content}
  &:-moz-placeholder{@content}
  &::-moz-placeholder{@content}
  &:-ms-input-placeholder{@content}
}
